###
POST http://localhost:8080/api/v1/adoptions/5
Authorization: Bearer {{$auth.token("customer-auth")}}

> {%
    client.test("Test status code", function() {
        client.assert(response.status === 201, "Response status is not 201");
    });

    client.test("Test response body", function() {
        const responseBody = response.body;
        client.assert(responseBody.id !== undefined, "ID is missing");
        client.assert(responseBody.status === "PENDING", "Status is not correct");
        client.assert(responseBody.customer_id === 2, "Customer ID is not correct");
        client.assert(responseBody.manager_id === null, "Manager ID should be null");
        client.assert(responseBody.animal_id === 2, "Animal ID is not correct");
        client.assert(responseBody.date_time !== undefined, "Date time is missing");
    });
%}

###
POST http://localhost:8080/api/v1/adoptions/2
Authorization: Bearer {{$auth.token("customer-auth")}}

> {%
    client.test("Test status code", function() {
        client.assert(response.status === 409, "Response status is not 409");
        client.assert(response.body === "An adoption request already exists for customer ID: 2 and animal ID: 2",
            "Response body is not correct");
    });
%}


###
GET http://127.0.0.1:8080/api/v1/adoptions
Authorization: Bearer {{$auth.token("customer-auth")}}

> {%
    client.test("Test status code", function() {
        client.assert(response.status === 200, "Response status is not 200");
    });

    client.test("Test response body", function() {
        const responseBody = response.body[0];
        client.assert(responseBody.id !== undefined, "ID is missing");
        client.assert(responseBody.status === "PENDING", "Status is not correct");
        client.assert(responseBody.customer_id === 2, "Customer ID is not correct");
        client.assert(responseBody.manager_id === null, "Manager ID should be null");
        client.assert(responseBody.animal_id === 2, "Animal ID is not correct");
        client.assert(responseBody.date_time !== undefined, "Date time is missing");
    });
%}


###
PATCH http://localhost:8080/api/v1/adoptions
Authorization: Bearer {{$auth.token("adoption-manager-auth")}}
Content-Type: application/json

{
  "id": 1,
  "status": "DENIED"
}

> {%
    client.test("Test status code", function() {
        client.assert(response.status === 200, "Response status is not 200");
    });

    client.test("Test response body", function() {
        const responseBody = response.body;
        client.assert(responseBody.id !== undefined, "ID is missing");
        client.assert(responseBody.status === "DENIED", "Status is not correct");
        client.assert(responseBody.customer_id === 2, "Customer ID is not correct");
        client.assert(responseBody.manager_id === 4, "Manager ID should be null");
        client.assert(responseBody.animal_id === 2, "Animal ID is not correct");
        client.assert(responseBody.date_time !== undefined, "Date time is missing");
    });
%}

###
GET http://127.0.0.1:8080/api/v1/adoptions?status=DENIED
Authorization: Bearer {{$auth.token("customer-auth")}}

###
GET http://127.0.0.1:8080/api/v1/adoptions?status=PENDING
Authorization: Bearer {{$auth.token("adoption-manager-auth")}}