spring:
  application:
    name: balance-service
  r2dbc:
    url: r2dbc:postgresql://${DB_HOST:localhost}:${DB_PORT:25432}/postgres
    username: ${DB_USERNAME:postgres}
    password: ${DB_PASSWORD:postgres}
    pool:
      initial-size: 0
      max-size: 15
      max-idle-time: 300000 # 5 минут
      max-lifetime: 600000 # 10 минут
      validation-query: SELECT 1
      validation-query-timeout: 1000 # 1 секунда
      connection-timeout: 10000 # 10 секунд
      idle-timeout: 300000 # 5 минут

  kafka:
    bootstrap-servers: "${KAFKA_HOST:localhost:29092}"
    consumer:
      group-id: "balance_change_group"
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
      properties:
        spring.json.trusted.packages: "*"
        spring.json.value.default.type: "itmo.highload.kafka.TransactionBalanceMessage"
      balance-change-topic: "balance_change"
      roll-back-topic: "roll-back"
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
      transaction-result-topic: "transaction_result"
      properties:
        spring.json.trusted.packages: "*"  # Для доверия всем пакетам
        spring.json.value.default.type: "itmo.highload.kafka.TransactionResultMessage"

balance:
  delay: ${TRANSACTION_DELAY:10}

server:
  port: ${APP_SERVER_PORT:8099}
app.base-url: /api/v1

api:
  address: ${API_ADDRESS:localhost:8080}

jwt:
  secret:
    sign: ${JWT_SECRET:0LHQvtC20LUg0L/QvtC80L7Qs9C4INC90LDQvCDQt9Cw0LrRgNGL0YLRjCDRjdGC0L7RgiDQv9GA0LXQtNC80LXRgg==}

eureka:
  client:
    serviceUrl:
      defaultZone: http://${EUREKA_HOST:localhost}:8761/eureka/

springdoc:
  api-docs:
    enabled: true
    path: /v3/api-docs
  swagger-ui:
    enabled: true
    path: /swagger-ui.html
    url: /v3/api-docs
